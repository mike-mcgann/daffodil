<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->

<tdml:testSuite suiteName="presenceByChoice" description="Tests for presence by choice construct"
                xmlns:tdml="http://www.ibm.com/xmlns/dfdl/testData" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xmlns:dfdl="http://www.ogf.org/dfdl/dfdl-1.0/" xmlns:xs="http://www.w3.org/2001/XMLSchema"
                xmlns:fn="http://www.w3.org/2005/xpath-functions"
                xmlns:ex="http://example.com"
                xmlns="http://example.com">

  <tdml:defineSchema name="presenceByChoice">
    <xs:include schemaLocation="org/apache/daffodil/xsd/DFDLGeneralFormat.dfdl.xsd"/>

    <dfdl:defineFormat name="thesePropertiesShouldNotMatter">
      <dfdl:format textStandardBase='10' binaryFloatRep='ieee'
                   calendarPatternKind='implicit' escapeSchemeRef=''
                   documentFinalTerminatorCanBeMissing='no' ignoreCase='no'
                   separatorPolicy='suppressed' separatorPosition='infix' textNumberRep='standard'
                   textNumberCheckPolicy='strict' textStringJustification='left'
                   emptyValueDelimiterPolicy="both" utf16Width="fixed" textTrimKind="none"
                   truncateSpecifiedLengthString="no"
                   textPadKind="none"
                   binaryNumberCheckPolicy="lax"
                   fillByte="%#r00;"
                   textBidi="no"
                   floating="no"
                   choiceLengthKind='implicit'
                   outputNewLine='{$dfdl:outputNewLine}' />
    </dfdl:defineFormat>

    <dfdl:defineFormat name="msBase">
      <dfdl:format ref="ex:thesePropertiesShouldNotMatter"
                   sequenceKind='ordered' initiator="" terminator="" separator=""
                   initiatedContent='no' leadingSkip='0' trailingSkip='0'
                   textStringPadCharacter='%SP;' lengthUnits="bits" alignment="1"
                   alignmentUnits="bits" representation="binary" encoding="X-DFDL-US-ASCII-7-BIT-PACKED"
                   binaryNumberRep="binary" byteOrder="littleEndian" bitOrder="leastSignificantBitFirst"
                   encodingErrorPolicy="replace"
                   outputNewLine="%LF;" textOutputMinLength="0"/>
    </dfdl:defineFormat>

    <!-- the default format makes sequences behave properly, but every element
      needs an explicit dfdl:ref to provide its length kind and (if optional or repeating)
      occursCountKind. -->
    <dfdl:format ref="ex:msBase" />

    <xs:simpleType name="presenceIndicator" dfdl:length="1"
                   dfdl:ref="ex:msBase" dfdl:lengthKind="explicit">
      <xs:restriction base="xs:unsignedInt" />
    </xs:simpleType>

    <xs:group name="PI_true_1">
      <xs:sequence>
        <xs:element name="h_PI_true" type="ex:presenceIndicator"
                    dfdl:outputValueCalc="{ 1 }">
          <xs:annotation>
            <xs:appinfo source="http://www.ogf.org/dfdl/">
              <dfdl:discriminator test="{ . eq 1 }" />
            </xs:appinfo>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:group>

    <xs:group name="PI_false_1">
      <xs:sequence>
        <xs:element name="h_PI_false" type="ex:presenceIndicator"
                    dfdl:outputValueCalc="{ 0 }"/>
      </xs:sequence>
    </xs:group>

    <xs:group name="PI_true_2">
      <xs:sequence>
        <xs:element name="h_PI_true" type="ex:presenceIndicator"
                    dfdl:outputValueCalc="{ 1 }"/>
      </xs:sequence>
    </xs:group>

    <xs:group name="PI_false_2">
      <xs:sequence>
        <xs:element name="h_PI_false" type="ex:presenceIndicator"
                    dfdl:outputValueCalc="{ 0 }">
          <xs:annotation>
            <xs:appinfo source="http://www.ogf.org/dfdl/">
              <dfdl:discriminator test="{ . ne 1 }" />
            </xs:appinfo>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:group>

    <xs:element name="a1" dfdl:lengthKind="implicit">
      <xs:complexType>
        <xs:choice>
          <xs:sequence>
            <xs:sequence dfdl:hiddenGroupRef="ex:PI_true_1" />
            <xs:element name="b1" dfdl:lengthKind="implicit">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="value" type="xs:unsignedInt"
                              dfdl:lengthKind="explicit" dfdl:length="2" />
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:sequence dfdl:hiddenGroupRef="ex:PI_false_1" />
        </xs:choice>
      </xs:complexType>
    </xs:element>

    <xs:element name="a2" dfdl:lengthKind="implicit">
      <xs:complexType>
        <xs:choice>
          <xs:sequence dfdl:hiddenGroupRef="ex:PI_false_2" />
          <xs:sequence>
            <xs:sequence dfdl:hiddenGroupRef="ex:PI_true_2" />
            <xs:element name="b2" dfdl:lengthKind="implicit">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="value" type="xs:unsignedInt"
                              dfdl:lengthKind="explicit" dfdl:length="2" />
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:choice>
      </xs:complexType>
    </xs:element>

  </tdml:defineSchema>

  <tdml:parserTestCase name="presenceByChoice_1_1" root="a1"
                       model="presenceByChoice">
    <tdml:document bitOrder="LSBFirst">
      <tdml:documentPart type="bits" byteOrder="LTR">111
      </tdml:documentPart>
    </tdml:document>
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <a1>
          <b1>
            <value>3</value>
          </b1>
        </a1>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>

  <tdml:parserTestCase name="presenceByChoice_1_2" root="a1"
                       model="presenceByChoice">
    <tdml:document bitOrder="LSBFirst">
      <tdml:documentPart type="bits" byteOrder="LTR">0
      </tdml:documentPart>
    </tdml:document>
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <a1></a1>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>

  <tdml:parserTestCase name="presenceByChoice_2_1" root="a2"
                       model="presenceByChoice">
    <tdml:document bitOrder="LSBFirst">
      <tdml:documentPart type="bits" byteOrder="LTR">111
      </tdml:documentPart>
    </tdml:document>
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <a2>
          <b2>
            <value>3</value>
          </b2>
        </a2>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>

  <tdml:parserTestCase name="presenceByChoice_2_2" root="a2"
                       model="presenceByChoice">
    <tdml:document bitOrder="LSBFirst">
      <tdml:documentPart type="bits" byteOrder="LTR">0
      </tdml:documentPart>
    </tdml:document>
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <a2></a2>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>

  <tdml:defineSchema name="presenceByChoice_empty">
    <xs:include schemaLocation="org/apache/daffodil/xsd/DFDLGeneralFormat.dfdl.xsd"/>
    <dfdl:format ref="ex:GeneralFormat" />

    <xs:group name="empty">
      <xs:sequence>
        <xs:element name="empty" type="xs:string" dfdl:lengthKind="explicit" dfdl:length="0"
                    dfdl:outputValueCalc="{ '' }"/>
      </xs:sequence>
    </xs:group>

    <xs:group name="notEmpty">
      <xs:sequence>
        <xs:element name="notEmpty" type="xs:string" dfdl:lengthKind="explicit" dfdl:length="0"
                    dfdl:outputValueCalc="{ '' }"/>
      </xs:sequence>
    </xs:group>

    <xs:element name="emptyFirst" dfdl:lengthKind="implicit">
      <xs:complexType>
        <xs:sequence>
          <xs:choice>
            <xs:sequence dfdl:hiddenGroupRef="ex:empty" />
            <xs:sequence>
              <xs:sequence dfdl:hiddenGroupRef="ex:notEmpty" />
              <xs:element name="foo" type="xs:string" minOccurs="0"
                          dfdl:initiator="foo"
                          dfdl:lengthKind="explicit" dfdl:length="1"/>
              <xs:element name="bar" type="xs:string" minOccurs="0"
                          dfdl:initiator="bar"
                          dfdl:lengthKind="explicit" dfdl:length="1"/>
            </xs:sequence>
          </xs:choice>
          <xs:element name="firstChoice" type="xs:boolean" dfdl:lengthKind="implicit" dfdl:inputValueCalc="{ fn:exists(../ex:empty) }"/>
          <xs:element name="secondChoice" type="xs:boolean" dfdl:lengthKind="implicit" dfdl:inputValueCalc="{ fn:exists(../ex:notEmpty) }"/>
          <xs:element name="remainder" minOccurs="0" type="xs:string" dfdl:lengthKind="explicit" dfdl:length="8"/>
        </xs:sequence>
      </xs:complexType>
    </xs:element>

    <xs:element name="emptySecond" dfdl:lengthKind="implicit">
      <xs:complexType>
        <xs:sequence>
          <xs:choice>
            <xs:sequence>
              <xs:sequence dfdl:hiddenGroupRef="ex:notEmpty" />
              <xs:element name="foo" type="xs:string" minOccurs="0"
                          dfdl:initiator="foo"
                          dfdl:lengthKind="explicit" dfdl:length="1"/>
              <xs:element name="bar" type="xs:string" minOccurs="0"
                          dfdl:initiator="bar"
                          dfdl:lengthKind="explicit" dfdl:length="1"/>
            </xs:sequence>
            <xs:sequence dfdl:hiddenGroupRef="ex:empty" />
          </xs:choice>
          <xs:element name="firstChoice" type="xs:boolean" dfdl:lengthKind="implicit" dfdl:inputValueCalc="{ fn:exists(../ex:notEmpty) }"/>
          <xs:element name="secondChoice" type="xs:boolean" dfdl:lengthKind="implicit" dfdl:inputValueCalc="{ fn:exists(../ex:empty) }"/>
          <xs:element name="remainder" minOccurs="0" type="xs:string" dfdl:lengthKind="explicit" dfdl:length="8"/>
        </xs:sequence>
      </xs:complexType>
    </xs:element>

  </tdml:defineSchema>

  <tdml:parserTestCase name="presenceByChoice_emptyFirst" root="emptyFirst"
                       model="presenceByChoice_empty">
    <tdml:document>
      <tdml:documentPart type="text"></tdml:documentPart>
    </tdml:document>
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <emptyFirst>
          <firstChoice>true</firstChoice>
          <secondChoice>false</secondChoice>
        </emptyFirst>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>

  <tdml:parserTestCase name="presenceByChoice_emptyFirst_notEmpty" root="emptyFirst"
                       model="presenceByChoice_empty">
    <tdml:document>
      <tdml:documentPart type="text">foo1bar2</tdml:documentPart>
    </tdml:document>
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <emptyFirst>
          <firstChoice>true</firstChoice>
          <secondChoice>false</secondChoice>
          <remainder>foo1bar2</remainder>
        </emptyFirst>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>

  <tdml:parserTestCase name="presenceByChoice_emptySecond" root="emptySecond"
                       model="presenceByChoice_empty">
    <tdml:document>
      <tdml:documentPart type="text"></tdml:documentPart>
    </tdml:document>
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <emptySecond>
          <firstChoice>true</firstChoice>
          <secondChoice>false</secondChoice>
        </emptySecond>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>

  <tdml:parserTestCase name="presenceByChoice_emptySecond_notEmpty" root="emptySecond"
                       model="presenceByChoice_empty">
    <tdml:document>
      <tdml:documentPart type="text">foo1bar2</tdml:documentPart>
    </tdml:document>
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <emptySecond>
          <foo>1</foo>
          <bar>2</bar>
          <firstChoice>true</firstChoice>
          <secondChoice>false</secondChoice>
        </emptySecond>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>

</tdml:testSuite>
